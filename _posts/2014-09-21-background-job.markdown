---
layout: post
title: "findやgrepに時間がかかるときはバックグラウンド処理に切り替え"
date: 2014-09-21 10:00:24 +0000
comments: true
category: Linux
tags: Linux
published: true
---



使い方にもよるのかもしれませんが、なかなかプロンプトが返ってこない処理をしなければならない時、例えば大量ファイルからfindやgrep・・・などなどの長い時間のかかる処理をするとき。たまにあります。なかなかプロンプトが返ってこずに待ちぼうけをくらうことがちらほら。もうひとつウィンドウを立ち上げてしまってもいいのですが、

なんらかのリソースだったり
モニタ数・電源等のHW制約だったり
緊急時だったり
踏み台サーバをいくつか経由しないと目的のサーバに辿りつけなかったり（←コレが一番よくある）

と、色々と制約の多い状況もあるのでその時のためのメモ。バックグラウンド・ジョブを使って処理を裏側にもっていくやり方。

## コマンドの引数にアンパサンドを付け、処理をバックグラウンド化する

はじめからバックグラウンドで処理させたいコマンドがあるときには、引数に「&」（アンパサンド）を付けます。

<pre lang="sh">$ grep -r "hogehoge" * &
[1] 9669</pre>

すると、ジョブ番号とそのジョブのプロセスIDがそれぞれ表示されます。

## フォアグランド・ジョブを一時停止する

フォアグランド・ジョブの最中に、Ctrl+Zキーと入力すると、以下の様な表示になります。

<pre lang="sh">$ grep -r "hogehoge" *
＜Ctrl+Zを入力＞
[1]+   Stopped   grep -r "hogehoge" *
$</pre>

こうすることでフォアグランド・ジョブが一時停止した状態で、待機状態に入ります。待機状態に入ったStoppedな
ジョブは、jobsコマンドで一覧確認できます。

<pre lang="sh">$ jobs
[1]+   Stopped   grep -r "hogehoge" *</pre>

## 一時停止したジョブをバックグラウンド・ジョブとして再開する

bgコマンドを使います。jobsに入っている処理をバックグラウンドとして実行。

<pre lang="sh">$ bg
[1]+ grep -r "hogehoge" * &</pre>
