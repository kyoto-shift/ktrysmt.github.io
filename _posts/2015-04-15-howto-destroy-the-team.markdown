---
layout: post
title: "開発チームを潰す方法を考えよう？"
date: 2015-04-09
comments: true
category: Management
tags: Management
published: true
---

<http://medt00lz.s59.xrea.com/wp/?p=1266>を読んで。

IT系でいうと技術的なアンチパターンの共有って結構多い。なぜそれがアンチパターンでありいけないのかを原理を把握していないと

> 防ぎかたではなく、攻めかたを考えることで、「何が悪いことなのか」が会議室に共有される。たとえば失敗を防いでいく上で、「現場に気合を入れる」ことは明らかな間違いだけれど、「気合」はたいてい良心に基づいて、防ぐ空気の会議室では、これを「悪い」と断じるのが難しい。

> 「誰かを陥れて、その人にミスを誘発するのにどんなやりかたが有効なのか」という議論は邪悪だけれど、これを行うことで、何をすればミスが増えるのか、どんな振る舞いが邪悪につながるものなのか、「悪いこと」の定義ができる。邪悪の認識が会議室に共有されて、ようやくたぶん、議論の場から「良心に基づいた邪悪」を排除することができるようになる。

物事を考える順序が重要だということのようだ。

- まず「悪いこと」が何かを定義する
- その「悪いこと」を起こさないためにどうしていけばいいか施策を考える
- 「悪いこと」が起こっていないか継続的に監視する
- 「悪いこと」がどれだけ発生したか計数しフィードバックする
- 施策の改善を検討する

PDCAの理屈と全く同じだ。

トラブルケースや事故の振り返りを行うことがもっとも重要だということ。特定の状況において上手くいったケースをとりあげてそれを全体に共有・適用しようとしても、大抵はうまくいかない。

定義が最も重要であり、定義は更新し続ける必用があると思い知った。定期的に定義を共有しあい「何が問題なのか」をただしく認識するこのワークフローは、組織の方向性を一致させることにも一役買うと思った。

昨今、ただでさえ情報は溢れていて施策や方法論は無限にある・入手できるようになっている。具体的施策や方法論に固執するのではなく何が問題なのかを問い続けたり、課題を再定義し続ける志向の重要性が、無数にある方法論の類に対して相対的に浮き彫りになっているように思える。

IT業界の現場で言うと、伊藤直也氏(@naoya)がよく公言するように、Githubを使いましょうとかslack使いましょう、プルリクエストでレビューしましょうというのは、どれも方法論にすぎない。HOWTOは無限にありそれが銀の弾丸なのではないというのは、本当にそのとおりだと今思った。頭ではなんとなくわかっていたが、実際にそうだと実感はできていなかった。

「悪いこと」が何かを定義できていなければ、ツールやHOWが何であろうとまた同じ問題か別の問題が発生することは目に見えてる。

「新人に大失敗をさせる方法」「大事故につながるケーススタディ」を積極的に共有するほうが、経験の少ない（＝パターンが足りない）新人には助かるはずだ。目に見えてわかりやすい目立つ施策を行っていなくとも、現場の人間の心理には確実に影響を与えられるのではないか。

結論はないが終わり。
